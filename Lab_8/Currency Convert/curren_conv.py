import telebot
from telebot import types
from currency_converter import CurrencyConverter

bot = telebot.TeleBot('8028050406:AAFQXIET6m0p_nTqPdwVUG7tZf9rVMsugEE') # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
currency = CurrencyConverter()
amount = 0

# –∫–æ–º–∞–Ω–¥–∞ /start –∂–¥—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, f'üëã–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! –Ø –±–æ—Ç ü§ñ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –≤–∞–ª—é—Ç\n' 
                     'üí± –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –∫—É—Ä—Å –≤–∞–ª—é—Ç, –∞ —Ç–∞–∫–æ–∂ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –æ–¥–Ω—É –≤–∞–ª—é—Ç—É –≤ —ñ–Ω—à—É\n'
                     '‚ñ∂ –í–≤–µ–¥–∏ /convert, —â–æ–± –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤–∞–ª—é—Ç–∏ –∞–±–æ, /help —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —è–∫ –∑—ñ –º–Ω–æ—é –ø—Ä–∞—Ü—é–≤–∞—Ç–∏\n')

# –∫–æ–º–∞–Ω–¥–∞ /convert –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –≤–∞–ª—é—Ç
@bot.message_handler(commands= ['convert'])
def convert(message):
    bot.send_message(message.chat.id, 'üí∞ –í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó')
    bot.register_next_step_handler(message, summa)

# —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–≤–µ–¥–µ–Ω–æ—ó —Å—É–º–∏
def summa(message):
    global amount
    try:
        amount = float(message.text.strip())
    except ValueError:
        bot.send_message(message.chat.id, '‚ùó –í–≤–µ–¥—ñ—Ç—å —Ü—ñ–ª–µ —á–∏—Å–ª–æ –∞–±–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω–µ –∫—Ä–∞–ø–∫–æ—é, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 12.5')
        bot.register_next_step_handler(message, summa)
        return
    
    if amount > 0:
        murkup = types.InlineKeyboardMarkup(row_width=2)
        button1 = types.InlineKeyboardButton('üíµ USD ‚Üí EUR', callback_data='USD/EUR')    
        button2 = types.InlineKeyboardButton('üí∂ EUR ‚Üí USD', callback_data='EUR/USD')
        button3 = types.InlineKeyboardButton('üí≤ USD ‚Üí PLN', callback_data='USD/PLN')
        button4 = types.InlineKeyboardButton('üí¥ USD ‚Üí JPY', callback_data='USD/JPY')
        button5 = types.InlineKeyboardButton('üîÑ –Ü–Ω—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è', callback_data='else')
        murkup.add(button1, button2, button3, button4, button5)
        bot.send_message(message.chat.id, 'üîΩ –í–∏–±–µ—Ä—ñ—Ç—å –ø–∞—Ä—É –≤–∞–ª—é—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó', reply_markup=murkup)
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É —Å—É–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó')
        bot.register_next_step_handler(message, summa)

# —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def collback(call):
    if call.data != 'else':
        vallue = call.data.split('/')
        result = currency.convert(amount, vallue[0], vallue[1])
        bot.send_message(call.message.chat.id, f"‚úÖ {amount} {vallue[0]} = {round(result, 2)} {vallue[1]},\n"
                        "–ú–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–≤–µ—Å—Ç–∏ —Å—É–º—É")
        bot.register_next_step_handler(call.message, summa)
    else:
        bot.send_message(call.message.chat.id, '–í–≤–µ–¥—ñ—Ç—å —ñ–Ω—à—É –ø–∞—Ä—É –≤–∞–ª—é—Ç —á–µ—Ä–µ–∑ —Å–ª–µ—à, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ USD/EUR')
        bot.register_next_step_handler(call.message, mycurrency)
        
# —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–≤–µ–¥–µ–Ω–æ—ó –ø–∞—Ä–∏ –≤–∞–ª—é—Ç
def mycurrency(message):
    value = message.text.upper().split('/')
    try:
        result = currency.convert(amount, value[0], value[1])
        bot.send_message(message.chat.id, f"‚úÖ {amount} {value[0]} = {round(result, 2)} {value[1]},\n"
                        "–ú–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–≤–µ—Å—Ç–∏ —Å—É–º—É")
        bot.register_next_step_handler(message, summa)
    except Exception as e:
        bot.send_message(message.chat.id, '‚ùó –í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É –ø–∞—Ä—É –≤–∞–ª—é—Ç —á–µ—Ä–µ–∑ —Å–ª–µ—à, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ USD/EUR')
        bot.register_next_step_handler(message, mycurrency)

# –∫–æ–º–∞–Ω–¥–∞ /exchange –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—É –≤–∞–ª—é—Ç
@bot.message_handler(commands = ['exchange']) 
def exchange(message):
    try:
        # currency.currencies - –≤—Å—ñ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ –≤–∞–ª—é—Ç–∏
        all_rates = []
        for code in sorted(currency.currencies):
            if code != 'USD':  # –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ –∫—É—Ä—Å USD –¥–æ USD
                try:
                    rate = currency.convert(1, 'USD', code)
                    all_rates.append(f"USD ‚Üí {code}: {round(rate, 2)}")
                except Exception:
                    continue  # —è–∫—â–æ –¥–ª—è —è–∫–æ—ó—Å—å –≤–∞–ª—é—Ç–∏ –Ω–µ–º–∞—î –∫—É—Ä—Å—É, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
        rates_text = '\n'.join(all_rates)
        bot.send_message(message.chat.id, f'üìà –ö—É—Ä—Å USD –¥–æ –≤—Å—ñ—Ö –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏—Ö –≤–∞–ª—é—Ç:\n{rates_text}')
    except Exception as e:
        bot.send_message(message.chat.id, '‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—É—Ä—Å –≤–∞–ª—é—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.')
       
# –∫–æ–º–∞–Ω–¥–∞ /help –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–≤—ñ–¥–∫–∏ 
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, '–Ø –º–æ–∂—É –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤–∞–ª—é—Ç–∏ —Ç–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ –∫—É—Ä—Å –≤–∞–ª—é—Ç.\n'
                     '–í–≤–µ–¥—ñ—Ç—å /convert, —â–æ–± –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤–∞–ª—é—Ç–∏\n'
                     '–í–≤–µ–¥—ñ—Ç—å /exchange, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –∫—É—Ä—Å –≤–∞–ª—é—Ç\n'
                     '–ü—ñ—Å–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ /convert, —è –∑–∞–ø–∏—Ç–∞—é —É –≤–∞—Å —Å—É–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó.\n'
                     '–ü–æ—Ç—ñ–º –≤–∏ –∑–º–æ–∂–µ—Ç–µ –≤–∏–±—Ä–∞—Ç–∏ –ø–∞—Ä—É –≤–∞–ª—é—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó.\n'
                     '–Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ—é –ø–∞—Ä—É –≤–∞–ª—é—Ç, –≤–≤–µ–¥—ñ—Ç—å —ó—ó —É —Ñ–æ—Ä–º–∞—Ç—ñ "USD/EUR".\n'
                     '–Ø –ø—ñ–¥—Ç—Ä–∏–º—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—é –º—ñ–∂ –±–∞–≥–∞—Ç—å–º–∞ –≤–∞–ª—é—Ç–∞–º–∏, —Ç–∞–∫–∏–º–∏ —è–∫ USD, EUR, PLN, JPY —Ç–∞ —ñ–Ω—à–∏–º–∏.\n')        

bot.polling(none_stop=True)